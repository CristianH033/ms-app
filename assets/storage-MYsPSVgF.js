import{s as c}from"./index-D_lficq2.js";const l=async n=>new Promise((e,r)=>{const t=new FileReader;t.onloadend=()=>{typeof t.result=="string"?e(t.result):r(new Error("Failed to convert to base64"))},t.onerror=r,t.readAsDataURL(n)});var o=[];for(var s=0;s<256;++s)o.push((s+256).toString(16).slice(1));function p(n,e=0){return(o[n[e+0]]+o[n[e+1]]+o[n[e+2]]+o[n[e+3]]+"-"+o[n[e+4]]+o[n[e+5]]+"-"+o[n[e+6]]+o[n[e+7]]+"-"+o[n[e+8]]+o[n[e+9]]+"-"+o[n[e+10]]+o[n[e+11]]+o[n[e+12]]+o[n[e+13]]+o[n[e+14]]+o[n[e+15]]).toLowerCase()}var a,y=new Uint8Array(16);function g(){if(!a&&(a=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!a))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(y)}var m=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const d={randomUUID:m};function b(n,e,r){if(d.randomUUID&&!e&&!n)return d.randomUUID();n=n||{};var t=n.random||(n.rng||g)();return t[6]=t[6]&15|64,t[8]=t[8]&63|128,p(t)}const v=async(n,e,r="")=>{e=b().slice(-10)+"-"+e;const{data:i,error:u}=await c.storage.from(r).upload(e,n,{cacheControl:"3600",upsert:!1});return u&&console.log(u),i},w=async(n,e="")=>{const{data:r,error:t}=await c.storage.from(e).download(n);return t&&console.log(t),r},x=async(n,e="")=>{const r=await w(n,e);return await l(r)};export{x as g,v as u,b as v};
