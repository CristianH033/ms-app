import{s as c}from"./index-Dsy3Kz98.js";const i=async n=>new Promise((e,r)=>{const o=new FileReader;o.onloadend=()=>{typeof o.result=="string"?e(o.result):r(new Error("Failed to convert to base64"))},o.onerror=r,o.readAsDataURL(n)});var t=[];for(var s=0;s<256;++s)t.push((s+256).toString(16).slice(1));function l(n,e=0){return(t[n[e+0]]+t[n[e+1]]+t[n[e+2]]+t[n[e+3]]+"-"+t[n[e+4]]+t[n[e+5]]+"-"+t[n[e+6]]+t[n[e+7]]+"-"+t[n[e+8]]+t[n[e+9]]+"-"+t[n[e+10]]+t[n[e+11]]+t[n[e+12]]+t[n[e+13]]+t[n[e+14]]+t[n[e+15]]).toLowerCase()}var a,p=new Uint8Array(16);function y(){if(!a&&(a=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!a))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(p)}var g=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const d={randomUUID:g};function m(n,e,r){if(d.randomUUID&&!e&&!n)return d.randomUUID();n=n||{};var o=n.random||(n.rng||y)();return o[6]=o[6]&15|64,o[8]=o[8]&63|128,l(o)}const U=async(n,e)=>{e=m().slice(-10)+"-"+e;const{data:o,error:u}=await c.storage.from("raffles").upload(e,n,{cacheControl:"3600",upsert:!1});return u&&console.log(u),o},b=async(n,e="")=>{const{data:r,error:o}=await c.storage.from(e).download(n);return o&&console.log(o),r},v=async(n,e="")=>{const r=await b(n,e);return await i(r)};export{v as g,U as u,m as v};
